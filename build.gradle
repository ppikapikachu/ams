// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"

        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1.1'
        classpath "org.jacoco:org.jacoco.core:0.8.7"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        jcenter(){ url 'https://jcenter.bintray.com/'}
        maven { url 'https://jitpack.io' }
        maven {
            url "https://maven.aliyun.com/nexus/content/repositories/releases"
            maven { url 'https://maven.aliyun.com/nexus/content/repositories/google' }
            maven { url 'https://maven.aliyun.com/repository/public' }
            maven { url 'https://maven.aliyun.com/nexus/content/repositories/jcenter'}
        }
        maven {
            url "https://s3.amazonaws.com/repo.commonsware.com"
        }
        maven {
            allowInsecureProtocol = true
            url "http://repo.sunhitech.com:1338/repository/sunhi-java/"
            credentials {
                username 'sunhi'
                password 'sunhi#12'
            }
        }
        maven {
            url "https://repo1.maven.org/maven2"
        }

        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlin-eap"
        }
        maven { url "https://jitpack.io" }
        repositories {
            flatDir {
                dirs new File(rootProject.projectDir.getAbsolutePath() + '/libs')
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}